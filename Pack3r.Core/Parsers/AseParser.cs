using System.Text.RegularExpressions;
using Pack3r.Extensions;
using Pack3r.IO;
using Pack3r.Logging;
using Pack3r.Models;

namespace Pack3r.Parsers;

public partial class AseParser(
    ILogger<AseParser> logger,
    ILineReader reader) : IReferenceParser
{
    public string Description => "model";

    public bool CanParse(ReadOnlyMemory<char> resource) => resource.EndsWithF(".ase");

    public async Task<ResourceList?> Parse(IAsset asset, CancellationToken cancellationToken)
    {
        ResourceList resouces = [];

        await foreach (var line in reader.ReadLines(asset, cancellationToken))
        {
            if (Comment().IsMatch(line.Value.Span))
            {
                if (!line.Value.Span.Contains("Generated by Q3Map2", StringComparison.Ordinal))
                {
                    logger.Warn($"Unsupported .ASE model (not generated by Q3Map2): '{asset.FullPath}'");
                    return null;
                }
            }
            else if (line.Value.Span.StartsWithF("*MAP_NAME"))
            {
                if (line.Value.TryReadPastWhitespace(out var token) &&
                    !token.EqualsF("\"NOSHADER\"") &&
                    !token.EqualsF("\"textures/common/nodraw\""))
                {
                    resouces.Add(Resource.Shader(token.Trim('"'), in line));
                }
            }
            else if (line.Value.Span.StartsWithF("*GEOMOBJECT"))
            {
                break;
            }
        }

        return resouces;
    }

    [GeneratedRegex("""\*COMMENT\s""", RegexOptions.Singleline, 1000)]
    private static partial Regex Comment();
}
